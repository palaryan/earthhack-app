{"ast":null,"code":"'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\n\nvar linear = function linear(t) {\n  return t;\n};\n\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  var extrapolateRight = 'extend';\n\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n\n    return outputMax;\n  }\n\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n\n  result = easing(result);\n\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nfunction colorToRgba(input) {\n  var int32Color = normalizeColor(input);\n\n  if (int32Color === null) {\n    return input;\n  }\n\n  int32Color = int32Color || 0;\n  var r = (int32Color & 0xff000000) >>> 24;\n  var g = (int32Color & 0x00ff0000) >>> 16;\n  var b = (int32Color & 0x0000ff00) >>> 8;\n  var a = (int32Color & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\n\nvar stringShapeRegex = /[0-9\\.-]+/g;\n\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation(_objectSpread({}, config, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      return String(rounded);\n    });\n  };\n}\n\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\n\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\n\nfunction findRange(input, inputRange) {\n  var i;\n\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n\n  return i - 1;\n}\n\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);\n  }\n}\n\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\n\nvar AnimatedInterpolation = function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedInterpolation, _AnimatedWithChildren);\n\n  function AnimatedInterpolation(parent, config) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n\n  var _proto = AnimatedInterpolation.prototype;\n\n  _proto.__makeNative = function __makeNative() {\n    this._parent.__makeNative();\n\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    var parentValue = this._parent.__getValue();\n\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n    return this._interpolation(parentValue);\n  };\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  _proto.__attach = function __attach() {\n    this._parent.__addChild(this);\n  };\n\n  _proto.__detach = function __detach() {\n    this._parent.__removeChild(this);\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__transformDataType = function __transformDataType(range) {\n    return range.map(function (value) {\n      if (typeof value !== 'string') {\n        return value;\n      }\n\n      if (/deg$/.test(value)) {\n        var degrees = parseFloat(value) || 0;\n        var radians = degrees * Math.PI / 180.0;\n        return radians;\n      } else {\n        return parseFloat(value) || 0;\n      }\n    });\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    if (process.env.NODE_ENV !== 'production') {\n      NativeAnimatedHelper.validateInterpolation(this._config);\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      outputRange: this.__transformDataType(this._config.outputRange),\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation'\n    };\n  };\n\n  return AnimatedInterpolation;\n}(AnimatedWithChildren);\n\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;","map":{"version":3,"sources":["C:/Users/aryan/Documents/GitHub/earthhack-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedInterpolation.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","invariant","normalizeColor","linear","t","createInterpolation","config","outputRange","createInterpolationFromStringOutputRange","checkInfiniteRange","inputRange","checkValidInputRange","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","int32Color","r","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","number","push","interpolations","shouldRound","isRgbOrRgba","replace","val","rounded","Math","round","String","startsWith","arr","pattern","name","AnimatedInterpolation","_AnimatedWithChildren","parent","_this","call","_parent","_config","_interpolation","_proto","__makeNative","__getValue","parentValue","__attach","__addChild","__detach","__removeChild","__transformDataType","test","degrees","parseFloat","radians","PI","__getNativeConfig","process","env","NODE_ENV","validateInterpolation","type","__createInterpolation"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n\r\n/* eslint no-bitwise: 0 */\r\n'use strict';\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nimport AnimatedNode from './AnimatedNode';\r\nimport AnimatedWithChildren from './AnimatedWithChildren';\r\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport normalizeColor from 'normalize-css-color';\r\n\r\nvar linear = function linear(t) {\r\n  return t;\r\n};\r\n/**\r\n * Very handy helper to map input ranges to output ranges with an easing\r\n * function and custom behavior outside of the ranges.\r\n */\r\n\r\n\r\nfunction createInterpolation(config) {\r\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\r\n    return createInterpolationFromStringOutputRange(config);\r\n  }\r\n\r\n  var outputRange = config.outputRange;\r\n  checkInfiniteRange('outputRange', outputRange);\r\n  var inputRange = config.inputRange;\r\n  checkInfiniteRange('inputRange', inputRange);\r\n  checkValidInputRange(inputRange);\r\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\r\n  var easing = config.easing || linear;\r\n  var extrapolateLeft = 'extend';\r\n\r\n  if (config.extrapolateLeft !== undefined) {\r\n    extrapolateLeft = config.extrapolateLeft;\r\n  } else if (config.extrapolate !== undefined) {\r\n    extrapolateLeft = config.extrapolate;\r\n  }\r\n\r\n  var extrapolateRight = 'extend';\r\n\r\n  if (config.extrapolateRight !== undefined) {\r\n    extrapolateRight = config.extrapolateRight;\r\n  } else if (config.extrapolate !== undefined) {\r\n    extrapolateRight = config.extrapolate;\r\n  }\r\n\r\n  return function (input) {\r\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\r\n    var range = findRange(input, inputRange);\r\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\r\n  };\r\n}\r\n\r\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\r\n  var result = input; // Extrapolate\r\n\r\n  if (result < inputMin) {\r\n    if (extrapolateLeft === 'identity') {\r\n      return result;\r\n    } else if (extrapolateLeft === 'clamp') {\r\n      result = inputMin;\r\n    } else if (extrapolateLeft === 'extend') {// noop\r\n    }\r\n  }\r\n\r\n  if (result > inputMax) {\r\n    if (extrapolateRight === 'identity') {\r\n      return result;\r\n    } else if (extrapolateRight === 'clamp') {\r\n      result = inputMax;\r\n    } else if (extrapolateRight === 'extend') {// noop\r\n    }\r\n  }\r\n\r\n  if (outputMin === outputMax) {\r\n    return outputMin;\r\n  }\r\n\r\n  if (inputMin === inputMax) {\r\n    if (input <= inputMin) {\r\n      return outputMin;\r\n    }\r\n\r\n    return outputMax;\r\n  } // Input Range\r\n\r\n\r\n  if (inputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (inputMax === Infinity) {\r\n    result = result - inputMin;\r\n  } else {\r\n    result = (result - inputMin) / (inputMax - inputMin);\r\n  } // Easing\r\n\r\n\r\n  result = easing(result); // Output Range\r\n\r\n  if (outputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (outputMax === Infinity) {\r\n    result = result + outputMin;\r\n  } else {\r\n    result = result * (outputMax - outputMin) + outputMin;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction colorToRgba(input) {\r\n  var int32Color = normalizeColor(input);\r\n\r\n  if (int32Color === null) {\r\n    return input;\r\n  }\r\n\r\n  int32Color = int32Color || 0;\r\n  var r = (int32Color & 0xff000000) >>> 24;\r\n  var g = (int32Color & 0x00ff0000) >>> 16;\r\n  var b = (int32Color & 0x0000ff00) >>> 8;\r\n  var a = (int32Color & 0x000000ff) / 255;\r\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\r\n}\r\n\r\nvar stringShapeRegex = /[0-9\\.-]+/g;\r\n/**\r\n * Supports string shapes by extracting numbers so new values can be computed,\r\n * and recombines those values into new strings of the same shape.  Supports\r\n * things like:\r\n *\r\n *   rgba(123, 42, 99, 0.36) // colors\r\n *   -45deg                  // values with units\r\n */\r\n\r\nfunction createInterpolationFromStringOutputRange(config) {\r\n  var outputRange = config.outputRange;\r\n  invariant(outputRange.length >= 2, 'Bad output range');\r\n  outputRange = outputRange.map(colorToRgba);\r\n  checkPattern(outputRange); // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']\r\n  // ->\r\n  // [\r\n  //   [0, 50],\r\n  //   [100, 150],\r\n  //   [200, 250],\r\n  //   [0, 0.5],\r\n  // ]\r\n\r\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\r\n   * guard against this possibility.\r\n   */\r\n\r\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\r\n    return [];\r\n  });\r\n  outputRange.forEach(function (value) {\r\n    /* $FlowFixMe(>=0.18.0): `value.match()` can return `null`. Need to guard\r\n     * against this possibility.\r\n     */\r\n    value.match(stringShapeRegex).forEach(function (number, i) {\r\n      outputRanges[i].push(+number);\r\n    });\r\n  });\r\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\r\n   * guard against this possibility.\r\n   */\r\n\r\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\r\n    return createInterpolation(_objectSpread({}, config, {\r\n      outputRange: outputRanges[i]\r\n    }));\r\n  }); // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\r\n  // round the opacity (4th column).\r\n\r\n  var shouldRound = isRgbOrRgba(outputRange[0]);\r\n  return function (input) {\r\n    var i = 0; // 'rgba(0, 100, 200, 0)'\r\n    // ->\r\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\r\n\r\n    return outputRange[0].replace(stringShapeRegex, function () {\r\n      var val = +interpolations[i++](input);\r\n      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\r\n      return String(rounded);\r\n    });\r\n  };\r\n}\r\n\r\nfunction isRgbOrRgba(range) {\r\n  return typeof range === 'string' && range.startsWith('rgb');\r\n}\r\n\r\nfunction checkPattern(arr) {\r\n  var pattern = arr[0].replace(stringShapeRegex, '');\r\n\r\n  for (var i = 1; i < arr.length; ++i) {\r\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\r\n  }\r\n}\r\n\r\nfunction findRange(input, inputRange) {\r\n  var i;\r\n\r\n  for (i = 1; i < inputRange.length - 1; ++i) {\r\n    if (inputRange[i] >= input) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return i - 1;\r\n}\r\n\r\nfunction checkValidInputRange(arr) {\r\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\r\n\r\n  for (var i = 1; i < arr.length; ++i) {\r\n    invariant(arr[i] >= arr[i - 1],\r\n    /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\r\n     * one or both of the operands may be something that doesn't cleanly\r\n     * convert to a string, like undefined, null, and object, etc. If you really\r\n     * mean this implicit string conversion, you can do something like\r\n     * String(myThing)\r\n     */\r\n    'inputRange must be monotonically increasing ' + arr);\r\n  }\r\n}\r\n\r\nfunction checkInfiniteRange(name, arr) {\r\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\r\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\r\n  /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\r\n   * one or both of the operands may be something that doesn't cleanly convert\r\n   * to a string, like undefined, null, and object, etc. If you really mean\r\n   * this implicit string conversion, you can do something like\r\n   * String(myThing)\r\n   */\r\n  name + 'cannot be ]-infinity;+infinity[ ' + arr);\r\n}\r\n\r\nvar AnimatedInterpolation =\r\n/*#__PURE__*/\r\nfunction (_AnimatedWithChildren) {\r\n  _inheritsLoose(AnimatedInterpolation, _AnimatedWithChildren);\r\n\r\n  // Export for testing.\r\n  function AnimatedInterpolation(parent, config) {\r\n    var _this;\r\n\r\n    _this = _AnimatedWithChildren.call(this) || this;\r\n    _this._parent = parent;\r\n    _this._config = config;\r\n    _this._interpolation = createInterpolation(config);\r\n    return _this;\r\n  }\r\n\r\n  var _proto = AnimatedInterpolation.prototype;\r\n\r\n  _proto.__makeNative = function __makeNative() {\r\n    this._parent.__makeNative();\r\n\r\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\r\n  };\r\n\r\n  _proto.__getValue = function __getValue() {\r\n    var parentValue = this._parent.__getValue();\r\n\r\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\r\n    return this._interpolation(parentValue);\r\n  };\r\n\r\n  _proto.interpolate = function interpolate(config) {\r\n    return new AnimatedInterpolation(this, config);\r\n  };\r\n\r\n  _proto.__attach = function __attach() {\r\n    this._parent.__addChild(this);\r\n  };\r\n\r\n  _proto.__detach = function __detach() {\r\n    this._parent.__removeChild(this);\r\n\r\n    _AnimatedWithChildren.prototype.__detach.call(this);\r\n  };\r\n\r\n  _proto.__transformDataType = function __transformDataType(range) {\r\n    // Change the string array type to number array\r\n    // So we can reuse the same logic in iOS and Android platform\r\n    return range.map(function (value) {\r\n      if (typeof value !== 'string') {\r\n        return value;\r\n      }\r\n\r\n      if (/deg$/.test(value)) {\r\n        var degrees = parseFloat(value) || 0;\r\n        var radians = degrees * Math.PI / 180.0;\r\n        return radians;\r\n      } else {\r\n        // Assume radians\r\n        return parseFloat(value) || 0;\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.__getNativeConfig = function __getNativeConfig() {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      NativeAnimatedHelper.validateInterpolation(this._config);\r\n    }\r\n\r\n    return {\r\n      inputRange: this._config.inputRange,\r\n      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\r\n      outputRange: this.__transformDataType(this._config.outputRange),\r\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\r\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\r\n      type: 'interpolation'\r\n    };\r\n  };\r\n\r\n  return AnimatedInterpolation;\r\n}(AnimatedWithChildren);\r\n\r\nAnimatedInterpolation.__createInterpolation = createInterpolation;\r\nexport default AnimatedInterpolation;"]},"metadata":{},"sourceType":"module"}