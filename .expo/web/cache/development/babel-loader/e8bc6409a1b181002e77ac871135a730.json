{"ast":null,"code":"import merge from 'deep-assign';\n\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\n  var oldValue = window.localStorage.getItem(key);\n  var oldObject = JSON.parse(oldValue);\n  var newObject = JSON.parse(value);\n  var nextValue = JSON.stringify(merge({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nvar createPromise = function createPromise(getValue, callback) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var value = getValue();\n\n      if (callback) {\n        callback(null, value);\n      }\n\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n\n      reject(err);\n    }\n  });\n};\n\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\n  return Promise.all(promises).then(function (result) {\n    var value = processResult ? processResult(result) : null;\n    callback && callback(null, value);\n    return Promise.resolve(value);\n  }, function (errors) {\n    callback && callback(errors);\n    return Promise.reject(errors);\n  });\n};\n\nvar AsyncStorage = function () {\n  function AsyncStorage() {}\n\n  AsyncStorage.clear = function clear(callback) {\n    return createPromise(function () {\n      window.localStorage.clear();\n    }, callback);\n  };\n\n  AsyncStorage.flushGetRequests = function flushGetRequests() {};\n\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\n    return createPromise(function () {\n      var numberOfKeys = window.localStorage.length;\n      var keys = [];\n\n      for (var i = 0; i < numberOfKeys; i += 1) {\n        var key = window.localStorage.key(i);\n        keys.push(key);\n      }\n\n      return keys;\n    }, callback);\n  };\n\n  AsyncStorage.getItem = function getItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.getItem(key);\n    }, callback);\n  };\n\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.getItem(key);\n    });\n\n    var processResult = function processResult(result) {\n      return result.map(function (value, i) {\n        return [keys[i], value];\n      });\n    };\n\n    return createPromiseAll(promises, callback, processResult);\n  };\n\n  AsyncStorage.setItem = function setItem(key, value, callback) {\n    return createPromise(function () {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  };\n\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.setItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\n    return createPromise(function () {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  };\n\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.mergeItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  AsyncStorage.removeItem = function removeItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  };\n\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.removeItem(key);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  return AsyncStorage;\n}();\n\nexport { AsyncStorage as default };","map":{"version":3,"sources":["C:/Users/aryan/Documents/GitHub/earthhack-app/node_modules/react-native-web/dist/exports/AsyncStorage/index.js"],"names":["merge","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","clear","flushGetRequests","getAllKeys","numberOfKeys","length","keys","i","push","multiGet","map","multiSet","keyValuePairs","item","mergeItem","multiMerge","removeItem","multiRemove","default"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport merge from 'deep-assign';\r\n\r\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\r\n  var oldValue = window.localStorage.getItem(key);\r\n  var oldObject = JSON.parse(oldValue);\r\n  var newObject = JSON.parse(value);\r\n  var nextValue = JSON.stringify(merge({}, oldObject, newObject));\r\n  window.localStorage.setItem(key, nextValue);\r\n};\r\n\r\nvar createPromise = function createPromise(getValue, callback) {\r\n  return new Promise(function (resolve, reject) {\r\n    try {\r\n      var value = getValue();\r\n\r\n      if (callback) {\r\n        callback(null, value);\r\n      }\r\n\r\n      resolve(value);\r\n    } catch (err) {\r\n      if (callback) {\r\n        callback(err);\r\n      }\r\n\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\r\n  return Promise.all(promises).then(function (result) {\r\n    var value = processResult ? processResult(result) : null;\r\n    callback && callback(null, value);\r\n    return Promise.resolve(value);\r\n  }, function (errors) {\r\n    callback && callback(errors);\r\n    return Promise.reject(errors);\r\n  });\r\n};\r\n\r\nvar AsyncStorage =\r\n/*#__PURE__*/\r\nfunction () {\r\n  function AsyncStorage() {}\r\n\r\n  /**\r\n   * Erases *all* AsyncStorage for the domain.\r\n   */\r\n  AsyncStorage.clear = function clear(callback) {\r\n    return createPromise(function () {\r\n      window.localStorage.clear();\r\n    }, callback);\r\n  }\r\n  /**\r\n   * (stub) Flushes any pending requests using a single batch call to get the data.\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.flushGetRequests = function flushGetRequests() {}\r\n  /**\r\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\r\n    return createPromise(function () {\r\n      var numberOfKeys = window.localStorage.length;\r\n      var keys = [];\r\n\r\n      for (var i = 0; i < numberOfKeys; i += 1) {\r\n        var key = window.localStorage.key(i);\r\n        keys.push(key);\r\n      }\r\n\r\n      return keys;\r\n    }, callback);\r\n  }\r\n  /**\r\n   * Fetches `key` value.\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.getItem = function getItem(key, callback) {\r\n    return createPromise(function () {\r\n      return window.localStorage.getItem(key);\r\n    }, callback);\r\n  }\r\n  /**\r\n   * multiGet resolves to an array of key-value pair arrays that matches the\r\n   * input format of multiSet.\r\n   *\r\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\r\n    var promises = keys.map(function (key) {\r\n      return AsyncStorage.getItem(key);\r\n    });\r\n\r\n    var processResult = function processResult(result) {\r\n      return result.map(function (value, i) {\r\n        return [keys[i], value];\r\n      });\r\n    };\r\n\r\n    return createPromiseAll(promises, callback, processResult);\r\n  }\r\n  /**\r\n   * Sets `value` for `key`.\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.setItem = function setItem(key, value, callback) {\r\n    return createPromise(function () {\r\n      window.localStorage.setItem(key, value);\r\n    }, callback);\r\n  }\r\n  /**\r\n   * Takes an array of key-value array pairs.\r\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\r\n    var promises = keyValuePairs.map(function (item) {\r\n      return AsyncStorage.setItem(item[0], item[1]);\r\n    });\r\n    return createPromiseAll(promises, callback);\r\n  }\r\n  /**\r\n   * Merges existing value with input value, assuming they are stringified JSON.\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\r\n    return createPromise(function () {\r\n      mergeLocalStorageItem(key, value);\r\n    }, callback);\r\n  }\r\n  /**\r\n   * Takes an array of key-value array pairs and merges them with existing\r\n   * values, assuming they are stringified JSON.\r\n   *\r\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\r\n    var promises = keyValuePairs.map(function (item) {\r\n      return AsyncStorage.mergeItem(item[0], item[1]);\r\n    });\r\n    return createPromiseAll(promises, callback);\r\n  }\r\n  /**\r\n   * Removes a `key`\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.removeItem = function removeItem(key, callback) {\r\n    return createPromise(function () {\r\n      return window.localStorage.removeItem(key);\r\n    }, callback);\r\n  }\r\n  /**\r\n   * Delete all the keys in the `keys` array.\r\n   */\r\n  ;\r\n\r\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\r\n    var promises = keys.map(function (key) {\r\n      return AsyncStorage.removeItem(key);\r\n    });\r\n    return createPromiseAll(promises, callback);\r\n  };\r\n\r\n  return AsyncStorage;\r\n}();\r\n\r\nexport { AsyncStorage as default };"]},"metadata":{},"sourceType":"module"}