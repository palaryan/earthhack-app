{"ast":null,"code":"'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport AnimatedInterpolation from \"./AnimatedInterpolation\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport InteractionManager from \"../../../../exports/InteractionManager\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nvar _uniqueId = 1;\n\nfunction _flush(rootNode) {\n  var animatedStyles = new Set();\n\n  function findAnimatedStyles(node) {\n    if (typeof node.update === 'function') {\n      animatedStyles.add(node);\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n\n  findAnimatedStyles(rootNode);\n  animatedStyles.forEach(function (animatedStyle) {\n    return animatedStyle.update();\n  });\n}\n\nvar AnimatedValue = function (_AnimatedWithChildren) {\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\n\n  function AnimatedValue(value) {\n    var _this;\n\n    _this = _AnimatedWithChildren.call(this) || this;\n    _this._startingValue = _this._value = value;\n    _this._offset = 0;\n    _this._animation = null;\n    _this._listeners = {};\n    return _this;\n  }\n\n  var _proto = AnimatedValue.prototype;\n\n  _proto.__detach = function __detach() {\n    this.stopAnimation();\n\n    _AnimatedWithChildren.prototype.__detach.call(this);\n  };\n\n  _proto.__getValue = function __getValue() {\n    return this._value + this._offset;\n  };\n\n  _proto.__makeNative = function __makeNative() {\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\n\n    if (Object.keys(this._listeners).length) {\n      this._startListeningToNativeValueUpdates();\n    }\n  };\n\n  _proto.setValue = function setValue(value) {\n    if (this._animation) {\n      this._animation.stop();\n\n      this._animation = null;\n    }\n\n    this._updateValue(value, !this.__isNative);\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\n    }\n  };\n\n  _proto.setOffset = function setOffset(offset) {\n    this._offset = offset;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  };\n\n  _proto.flattenOffset = function flattenOffset() {\n    this._value += this._offset;\n    this._offset = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  };\n\n  _proto.extractOffset = function extractOffset() {\n    this._offset += this._value;\n    this._value = 0;\n\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  };\n\n  _proto.addListener = function addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  };\n\n  _proto.removeListener = function removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && Object.keys(this._listeners).length === 0) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto.removeAllListeners = function removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  };\n\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\n    var _this2 = this;\n\n    if (this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\n      if (data.tag !== _this2.__getNativeTag()) {\n        return;\n      }\n\n      _this2._updateValue(data.value, false);\n    });\n  };\n\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  };\n\n  _proto.stopAnimation = function stopAnimation(callback) {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    callback && callback(this.__getValue());\n  };\n\n  _proto.resetAnimation = function resetAnimation(callback) {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n  };\n\n  _proto.interpolate = function interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  };\n\n  _proto.animate = function animate(animation, callback) {\n    var _this3 = this;\n\n    var handle = null;\n\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n\n    var previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(this._value, function (value) {\n      _this3._updateValue(value, true);\n    }, function (result) {\n      _this3._animation = null;\n\n      if (handle !== null) {\n        InteractionManager.clearInteractionHandle(handle);\n      }\n\n      callback && callback(result);\n    }, previousAnimation, this);\n  };\n\n  _proto.stopTracking = function stopTracking() {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  };\n\n  _proto.track = function track(tracking) {\n    this.stopTracking();\n    this._tracking = tracking;\n  };\n\n  _proto._updateValue = function _updateValue(value, flush) {\n    this._value = value;\n\n    if (flush) {\n      _flush(this);\n    }\n\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value: this.__getValue()\n      });\n    }\n  };\n\n  _proto.__getNativeConfig = function __getNativeConfig() {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset\n    };\n  };\n\n  return AnimatedValue;\n}(AnimatedWithChildren);\n\nexport default AnimatedValue;","map":{"version":3,"sources":["C:/Users/aryan/Documents/GitHub/earthhack-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValue.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","AnimatedInterpolation","AnimatedNode","AnimatedWithChildren","InteractionManager","NativeAnimatedHelper","NativeAnimatedAPI","API","_uniqueId","_flush","rootNode","animatedStyles","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","animatedStyle","AnimatedValue","_AnimatedWithChildren","value","_this","call","_startingValue","_value","_offset","_animation","_listeners","_proto","__detach","stopAnimation","__getValue","__makeNative","keys","length","_startListeningToNativeValueUpdates","setValue","stop","_updateValue","__isNative","setAnimatedNodeValue","__getNativeTag","setOffset","offset","setAnimatedNodeOffset","flattenOffset","flattenAnimatedNodeOffset","extractOffset","extractAnimatedNodeOffset","addListener","callback","id","String","removeListener","_stopListeningForNativeValueUpdates","removeAllListeners","_this2","__nativeAnimatedValueListener","startListeningToAnimatedNodeValue","nativeEventEmitter","data","tag","remove","stopListeningToAnimatedNodeValue","stopTracking","resetAnimation","interpolate","config","animate","animation","_this3","handle","__isInteraction","createInteractionHandle","previousAnimation","start","result","clearInteractionHandle","_tracking","track","tracking","flush","_key","__getNativeConfig","type"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n'use strict';\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nimport AnimatedInterpolation from './AnimatedInterpolation';\r\nimport AnimatedNode from './AnimatedNode';\r\nimport AnimatedWithChildren from './AnimatedWithChildren';\r\nimport InteractionManager from '../../../../exports/InteractionManager';\r\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\r\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\r\nvar _uniqueId = 1;\r\n/**\r\n * Animated works by building a directed acyclic graph of dependencies\r\n * transparently when you render your Animated components.\r\n *\r\n *               new Animated.Value(0)\r\n *     .interpolate()        .interpolate()    new Animated.Value(1)\r\n *         opacity               translateY      scale\r\n *          style                         transform\r\n *         View#234                         style\r\n *                                         View#123\r\n *\r\n * A) Top Down phase\r\n * When an Animated.Value is updated, we recursively go down through this\r\n * graph in order to find leaf nodes: the views that we flag as needing\r\n * an update.\r\n *\r\n * B) Bottom Up phase\r\n * When a view is flagged as needing an update, we recursively go back up\r\n * in order to build the new value that it needs. The reason why we need\r\n * this two-phases process is to deal with composite props such as\r\n * transform which can receive values from multiple parents.\r\n */\r\n\r\nfunction _flush(rootNode) {\r\n  var animatedStyles = new Set();\r\n\r\n  function findAnimatedStyles(node) {\r\n    if (typeof node.update === 'function') {\r\n      animatedStyles.add(node);\r\n    } else {\r\n      node.__getChildren().forEach(findAnimatedStyles);\r\n    }\r\n  }\r\n\r\n  findAnimatedStyles(rootNode);\r\n  animatedStyles.forEach(function (animatedStyle) {\r\n    return animatedStyle.update();\r\n  });\r\n}\r\n/**\r\n * Standard value for driving animations.  One `Animated.Value` can drive\r\n * multiple properties in a synchronized fashion, but can only be driven by one\r\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\r\n * or calling `setValue`) will stop any previous ones.\r\n *\r\n * See http://facebook.github.io/react-native/docs/animatedvalue.html\r\n */\r\n\r\n\r\nvar AnimatedValue =\r\n/*#__PURE__*/\r\nfunction (_AnimatedWithChildren) {\r\n  _inheritsLoose(AnimatedValue, _AnimatedWithChildren);\r\n\r\n  function AnimatedValue(value) {\r\n    var _this;\r\n\r\n    _this = _AnimatedWithChildren.call(this) || this;\r\n    _this._startingValue = _this._value = value;\r\n    _this._offset = 0;\r\n    _this._animation = null;\r\n    _this._listeners = {};\r\n    return _this;\r\n  }\r\n\r\n  var _proto = AnimatedValue.prototype;\r\n\r\n  _proto.__detach = function __detach() {\r\n    this.stopAnimation();\r\n\r\n    _AnimatedWithChildren.prototype.__detach.call(this);\r\n  };\r\n\r\n  _proto.__getValue = function __getValue() {\r\n    return this._value + this._offset;\r\n  };\r\n\r\n  _proto.__makeNative = function __makeNative() {\r\n    _AnimatedWithChildren.prototype.__makeNative.call(this);\r\n\r\n    if (Object.keys(this._listeners).length) {\r\n      this._startListeningToNativeValueUpdates();\r\n    }\r\n  }\r\n  /**\r\n   * Directly set the value.  This will stop any animations running on the value\r\n   * and update all the bound properties.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#setvalue\r\n   */\r\n  ;\r\n\r\n  _proto.setValue = function setValue(value) {\r\n    if (this._animation) {\r\n      this._animation.stop();\r\n\r\n      this._animation = null;\r\n    }\r\n\r\n    this._updateValue(value, !this.__isNative\r\n    /* don't perform a flush for natively driven values */\r\n    );\r\n\r\n    if (this.__isNative) {\r\n      NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);\r\n    }\r\n  }\r\n  /**\r\n   * Sets an offset that is applied on top of whatever value is set, whether via\r\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\r\n   * things like the start of a pan gesture.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#setoffset\r\n   */\r\n  ;\r\n\r\n  _proto.setOffset = function setOffset(offset) {\r\n    this._offset = offset;\r\n\r\n    if (this.__isNative) {\r\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\r\n    }\r\n  }\r\n  /**\r\n   * Merges the offset value into the base value and resets the offset to zero.\r\n   * The final output of the value is unchanged.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#flattenoffset\r\n   */\r\n  ;\r\n\r\n  _proto.flattenOffset = function flattenOffset() {\r\n    this._value += this._offset;\r\n    this._offset = 0;\r\n\r\n    if (this.__isNative) {\r\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\r\n    }\r\n  }\r\n  /**\r\n   * Sets the offset value to the base value, and resets the base value to zero.\r\n   * The final output of the value is unchanged.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#extractoffset\r\n   */\r\n  ;\r\n\r\n  _proto.extractOffset = function extractOffset() {\r\n    this._offset += this._value;\r\n    this._value = 0;\r\n\r\n    if (this.__isNative) {\r\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\r\n    }\r\n  }\r\n  /**\r\n   * Adds an asynchronous listener to the value so you can observe updates from\r\n   * animations.  This is useful because there is no way to\r\n   * synchronously read the value because it might be driven natively.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#addlistener\r\n   */\r\n  ;\r\n\r\n  _proto.addListener = function addListener(callback) {\r\n    var id = String(_uniqueId++);\r\n    this._listeners[id] = callback;\r\n\r\n    if (this.__isNative) {\r\n      this._startListeningToNativeValueUpdates();\r\n    }\r\n\r\n    return id;\r\n  }\r\n  /**\r\n   * Unregister a listener. The `id` param shall match the identifier\r\n   * previously returned by `addListener()`.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removelistener\r\n   */\r\n  ;\r\n\r\n  _proto.removeListener = function removeListener(id) {\r\n    delete this._listeners[id];\r\n\r\n    if (this.__isNative && Object.keys(this._listeners).length === 0) {\r\n      this._stopListeningForNativeValueUpdates();\r\n    }\r\n  }\r\n  /**\r\n   * Remove all registered listeners.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#removealllisteners\r\n   */\r\n  ;\r\n\r\n  _proto.removeAllListeners = function removeAllListeners() {\r\n    this._listeners = {};\r\n\r\n    if (this.__isNative) {\r\n      this._stopListeningForNativeValueUpdates();\r\n    }\r\n  };\r\n\r\n  _proto._startListeningToNativeValueUpdates = function _startListeningToNativeValueUpdates() {\r\n    var _this2 = this;\r\n\r\n    if (this.__nativeAnimatedValueListener) {\r\n      return;\r\n    }\r\n\r\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\r\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {\r\n      if (data.tag !== _this2.__getNativeTag()) {\r\n        return;\r\n      }\r\n\r\n      _this2._updateValue(data.value, false\r\n      /* flush */\r\n      );\r\n    });\r\n  };\r\n\r\n  _proto._stopListeningForNativeValueUpdates = function _stopListeningForNativeValueUpdates() {\r\n    if (!this.__nativeAnimatedValueListener) {\r\n      return;\r\n    }\r\n\r\n    this.__nativeAnimatedValueListener.remove();\r\n\r\n    this.__nativeAnimatedValueListener = null;\r\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\r\n  }\r\n  /**\r\n   * Stops any running animation or tracking. `callback` is invoked with the\r\n   * final value after stopping the animation, which is useful for updating\r\n   * state to match the animation position with layout.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#stopanimation\r\n   */\r\n  ;\r\n\r\n  _proto.stopAnimation = function stopAnimation(callback) {\r\n    this.stopTracking();\r\n    this._animation && this._animation.stop();\r\n    this._animation = null;\r\n    callback && callback(this.__getValue());\r\n  }\r\n  /**\r\n   * Stops any animation and resets the value to its original.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#resetanimation\r\n   */\r\n  ;\r\n\r\n  _proto.resetAnimation = function resetAnimation(callback) {\r\n    this.stopAnimation(callback);\r\n    this._value = this._startingValue;\r\n  }\r\n  /**\r\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\r\n   * 0-10.\r\n   */\r\n  ;\r\n\r\n  _proto.interpolate = function interpolate(config) {\r\n    return new AnimatedInterpolation(this, config);\r\n  }\r\n  /**\r\n   * Typically only used internally, but could be used by a custom Animation\r\n   * class.\r\n   *\r\n   * See http://facebook.github.io/react-native/docs/animatedvalue.html#animate\r\n   */\r\n  ;\r\n\r\n  _proto.animate = function animate(animation, callback) {\r\n    var _this3 = this;\r\n\r\n    var handle = null;\r\n\r\n    if (animation.__isInteraction) {\r\n      handle = InteractionManager.createInteractionHandle();\r\n    }\r\n\r\n    var previousAnimation = this._animation;\r\n    this._animation && this._animation.stop();\r\n    this._animation = animation;\r\n    animation.start(this._value, function (value) {\r\n      // Natively driven animations will never call into that callback, therefore we can always\r\n      // pass flush = true to allow the updated value to propagate to native with setNativeProps\r\n      _this3._updateValue(value, true\r\n      /* flush */\r\n      );\r\n    }, function (result) {\r\n      _this3._animation = null;\r\n\r\n      if (handle !== null) {\r\n        InteractionManager.clearInteractionHandle(handle);\r\n      }\r\n\r\n      callback && callback(result);\r\n    }, previousAnimation, this);\r\n  }\r\n  /**\r\n   * Typically only used internally.\r\n   */\r\n  ;\r\n\r\n  _proto.stopTracking = function stopTracking() {\r\n    this._tracking && this._tracking.__detach();\r\n    this._tracking = null;\r\n  }\r\n  /**\r\n   * Typically only used internally.\r\n   */\r\n  ;\r\n\r\n  _proto.track = function track(tracking) {\r\n    this.stopTracking();\r\n    this._tracking = tracking;\r\n  };\r\n\r\n  _proto._updateValue = function _updateValue(value, flush) {\r\n    this._value = value;\r\n\r\n    if (flush) {\r\n      _flush(this);\r\n    }\r\n\r\n    for (var _key in this._listeners) {\r\n      this._listeners[_key]({\r\n        value: this.__getValue()\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.__getNativeConfig = function __getNativeConfig() {\r\n    return {\r\n      type: 'value',\r\n      value: this._value,\r\n      offset: this._offset\r\n    };\r\n  };\r\n\r\n  return AnimatedValue;\r\n}(AnimatedWithChildren);\r\n\r\nexport default AnimatedValue;"]},"metadata":{},"sourceType":"module"}